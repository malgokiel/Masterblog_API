{
  "openapi": "3.0.3",
  "info": {
    "title": "Masterblog API",
    "description": "This is an API built to store blog posts",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5002"
    }
  ],
  "tags": [
    {
      "name": "Post",
      "description": "Information and actions on a Post"
    }
  ],
  "paths": {
    "/api/posts": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Returns all posts",
        "description": "The get function returns all the posts available in the JSON",
        "operationId": "getPost",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string"
            },
            "description": "Filter by title."
          },
          {
            "in": "query",
            "name": "content",
            "schema": {
              "type": "string"
            },
            "description": "Filter by content."
          },
          {
            "in": "query",
            "name": "author",
            "schema": {
              "type": "string"
            },
            "description": "Filter by author."
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter by start date (YYYY-MM-DD)."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "description": "Sort by author, title, content, date"
          },
          {
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "string"
            },
            "description": "Sorting direction (asc/desc)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Incorrect ID"
          }
        }
      },
      "post": {
        "tags": [
          "Post"
        ],
        "summary": "Add a new post to the file",
        "description": "Add a new post to the storage - JSON file",
        "operationId": "addPost",
        "requestBody": {
          "description": "Create a new post",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Invalid post title, content or author"
          }
        }
      }
    },
    "/api/posts/{id}": {
      "delete": {
        "tags": [
          "Post"
        ],
        "summary": "Deletes a post",
        "description": "delete a post based on id",
        "operationId": "deletePost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid post value"
          }
        }
      },
      "put": {
        "tags": [
          "Post"
        ],
        "summary": "Update an existing post",
        "description": "Update an existing post by Id",
        "operationId": "updatePost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent post in the JSON file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect ID"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Post": {
        "required": [
          "title",
          "content",
          "author"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "content": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet"
          },
          "author": {
            "type": "string",
            "example": "Betty"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {
      "Post": {
        "description": "Post object that needs to be added to the file",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Post"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Post"
            }
          }
        }
      }
    }
  }
}